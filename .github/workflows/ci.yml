name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - ".devcontainer/**"
      - ".vscode/**"
      - "**.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".devcontainer/**"
      - ".vscode/**"
      - "**.md"
  workflow_dispatch:

permissions: read-all

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Poetry
        run: pip install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install pip deps
        run: poetry install

      - name: Check generated stubs are up-to-date
        run: make generate

      - name: Check code formatting
        run: poetry run black --check .

      - name: Lint code
        run: poetry run ruff check .

      - name: Run type checks
        run: poetry run mypy --show-error-codes --pretty .

  build:
    name: Build
    needs: lint-and-test
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux
            image: ubuntu-latest
          - platform: windows
            image: windows-latest

    runs-on: ${{ matrix.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Poetry
        run: pip install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install pip deps
        run: poetry install

      - name: Run tests
        run: poetry run pytest

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage.xml
          flags: ${{ matrix.platform }},unittests

      - name: Build with PyInstaller
        run: poetry run pyinstaller --onefile --name "kkowa-${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}-${{ matrix.platform }}" main.py

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "dist-${{ matrix.platform }}"
          path: dist
